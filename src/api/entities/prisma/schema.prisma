// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Dataset
model Car {
  id          String   @id @default(uuid())
  maker       String
  model       String
  type        String
  dol         Int?
  vin         String?
  year        Int?
  range       Int?
  locationId  String   @map("location_id")
  cafvId      String?  @map("cafv_id")
  utilityId   String?  @map("utility_id")
  createdOn   DateTime @default(now()) @map("created_on")
  updatedOn   DateTime @updatedAt @map("updated_on")

  location    Location @relation(fields: [locationId], references: [id])
  cafv        CAFV?    @relation(fields: [cafvId], references: [id])
  utility     Utility? @relation(fields: [utilityId], references: [id])

  @@map("cars")
}

model Location {
  id         String   @id @default(uuid())
  xmlId      String   @map("xml_id")
  state      String
  city       String
  geom       Json?
  createdOn  DateTime @default(now()) @map("created_on")
  updatedOn  DateTime @updatedAt @map("updated_on")

  cars       Car[]

  @@map("locations")
}

model CAFV {
  id         String   @id @default(uuid())
  xmlId      String   @map("xml_id")
  name       String
  createdOn  DateTime @default(now()) @map("created_on")
  updatedOn  DateTime @updatedAt @map("updated_on")

  cars       Car[]

  @@map("cafv")
}

model Utility {
  id         String   @id @default(uuid())
  xmlId      String   @map("xml_id")
  name       String
  createdOn  DateTime @default(now()) @map("created_on")
  updatedOn  DateTime @updatedAt @map("updated_on")

  cars       Car[]

  @@map("utility")
}